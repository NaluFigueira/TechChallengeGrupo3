volumes:
  sqlserver_data:
  grafana-data:

networks:
  techChallengeNetwork:
    external: true

services:
  contacts_query_api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      - contacts_query_sqlserver.configurator
      - contacts_query_prometheus
      - contacts_query_grafana
    networks:
      - techChallengeNetwork

  contacts_query_prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9091:9090"
    networks:
      - techChallengeNetwork

  contacts_query_grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./observability/grafana/provisioning:/etc/grafana/provisioning/
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_AUTH_BASIC_ENABLED=false
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_DISABLE_SIGNOUT_MENU=true
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/provisioning/dashboards/contacts-api.json
    networks:
      - techChallengeNetwork

  tech-challenge-contacts-query-sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=S3cur3P@ssW0rd
      - MSSQL_PID=Developer
    ports:
      - 1434:1433
    volumes:
      - sqlserver_data:/var/opt/mssql
    restart: always
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P S3cur3P@ssW0rd -C -Q 'SELECT 1' || exit 1",
        ]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
    networks:
      - techChallengeNetwork

  contacts_query_sqlserver.configurator:
    image: mcr.microsoft.com/mssql/server:2022-latest
    volumes:
      - ./init:/docker-entrypoint-initdb.d
    depends_on:
      tech-challenge-contacts-query-sqlserver:
        condition: service_healthy
    command: >
      bash -c '
      /opt/mssql-tools18/bin/sqlcmd -S tech-challenge-contacts-query-sqlserver -U sa -P S3cur3P@ssW0rd -d master -i docker-entrypoint-initdb.d/init.sql -C;
      echo "All done!";
      '
    networks:
      - techChallengeNetwork
